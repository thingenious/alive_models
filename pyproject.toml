[project]
name = 'alive-models'
description = 'ALIVE models deployment'
authors = [
    {name= 'Panagiotis Kasnesis', email= 'pkasnesis@thingenious.io'},
    {name= 'Lazaros Toumanidis', email= 'laztoum@protonmail.com'}
]
license= {text = 'MIT'}
readme = 'README.md'
requires-python = '>=3.10,<3.13'
classifiers = [
    'Development Status :: 3 - Alpha',
    'Intended Audience :: Developers',
    'Intended Audience :: Science/Research',
    'License :: OSI Approved :: MIT License',
    'Operating System :: POSIX :: Linux',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Languare :: Python :: 3.12',
    'Topic :: Scientific/Engineering :: Artificial Intelligence',
    'Topic :: Scientific/Engineering :: Web Services',
]
dependencies = [
    # additional (in Containerfile):
    #  - MAX_JOBS=4 pip install flash-attn --no-build-isolation
    #  - pip install git+https://github.com/huggingface/parler-tts.git
    #  - for omegaconf: PyYAML (>=5.1.*):
    #        .* suffix can only be used with `==` or `!=` operators.
    # one can git clone, checkout to 2.0.6, change '>=5.1.*' to '>=5.1' and install it:
    #   $> git clone https://github.com/omry/omegaconf -b v2.0.6
    #   $> sed -i 's/PyYAML>=5.1.*/PyYAML>=5.1/' omegaconf/requirements/base.txt
    #   $> pip install ./omegaconf
    'accelerate==0.31.0',
    'ctranslate2==4.3.1',
    'cython==3.0.10',
    'deepface==0.0.92',
    'fairseq==0.12.2',
    'faster-whisper==1.0.3',
    'fasttext==0.9.3',
    'g2p-en==2.1.0',
    'numpy',
    'nltk==3.8.1',
    'orjson==3.10.5',
    'nvidia-pytriton==0.5.8; platform_system == "Linux" and platform_machine == "x86_64"',
    'omegaconf==2.0.6',
    'onnx==1.16.1',
    'onnxruntime-gpu==1.18.1',
    'openai-whisper==20231117',
    'optimum==1.20.0',
    'soundfile==0.12.1',
    'tensorflow==2.16.2',
    'tf-keras==2.16.0',
    'torch==2.3.1',
    'torchaudio==2.3.1',
    'ultralytics==8.2.48',
    'whisperspeech==0.8',
]
[project.urls]
homepage = 'https://thingenious.github.io/alive-models/'
repository = 'https://github.com/thingenious/alive-models.git'
[project.optional-dependencies]
dev = [
    'autoflake==2.3.1',
    'bandit==1.7.9',
    'black==24.4.2',
    'flake8==7.1.0',
    'isort==5.13.2',
    'mypy==1.10.1',
    'pre-commit==3.7.1',
    'pydocstyle==6.3.0',
    'pylint==3.2.5',
    'pylint-exit==1.2.0',
    'python-dotenv==1.0.1',
    'ruff==0.5.0',
    'toml==0.10.2',
    'types-PyYAML==6.0.12',
    'types-toml==0.10.8.20240310',
    'yamllint==1.35.1',
]
docs = [
  'mike==2.1.2',
  'mdx_truly_sane_lists==1.3',
  'mkdocs==1.6.0',
  'mkdocs-include-markdown-plugin==6.2.1',
  'mkdocs-material==9.5.27',
  'mkdocs-open-in-new-tab==1.0.3',
  'mkdocstrings[crystal,python]==0.25.1',
]
examples = [
  'av==12.2.0',
  'httpx==0.27.0',
  'Pillow==10.4.0',
  'playsound==1.3.0',
  'pygobject==3.48.2',
]
# black
[tool.black]
line-length = 120
skip-string-normalization=true
include = '''
    \.pyi?$
'''
exclude = '''
/(
    \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | .local
  | _build
  | __init__.py
  | .local
)/
'''

# mypy
[tool.mypy]
files = '.'
platform = 'linux'
ignore_missing_imports = true
disallow_untyped_defs = true
warn_unused_ignores = false
follow_imports = 'skip'
exclude = [
    '.venv',
    '.local'
]
plugins = [
]
# isort
[tool.isort]
profile ='black'
skip=[
    '.venv',
    './.local'
]
include_trailing_comma=true
force_grid_wrap=0
use_parentheses=true
line_length=120
[tool.pydocstyle]
match-dir='([^!(.venv)].*)([^!(.local)].*)'

# pylint
[tool.pylint.master]
load-plugins = [
    'pylint.extensions.mccabe',
    'pylint.extensions.redefined_variable_type',
    'pylint.extensions.broad_try_clause',
    'pylint.extensions.no_self_use',
]
extension-pkg-whitelist= []
fail-under=8.0
ignore=["CVS"]
ignore-paths = [
    "^(.*)/.venv/*",
    "^(.*)/.local/.*",
    ".venv/*",
    ".local/.*"
]
unsafe-load-any-extension="no"

[tool.pylint.messages_control]
enable=["c-extension-no-member"]
[tool.pylint.fotmat]
max-line-length=120
[tool.pylint.similarities]
ignore-imports="yes"
ignore-signatures="yes"
min-similarity-lines=10
[tool.pylint.design]
max-args=9
max-attributes=9

# bandit
[tool.bandit]
exclude_dirs = [
    ".venv",
    ".local"
]
# B104: bind to all interfaces (0.0.0.0)
# B110: allow pass on try/except
# B404: allow import subprocess
# B602, B603: allow shell=True (subprocess,popen)
skips = ['B104', 'B110', 'B404', 'B602', 'B603' ]

# ruff
[tool.ruff]
line-length = 120
extend-exclude = []

[tool.ruff.lint]
select = ["E4", "E7", "E9", "F", "Q"]
ignore = []
# # Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# # Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
exclude = ["*.pyi", "*.j2"]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
line-ending = "lf"
